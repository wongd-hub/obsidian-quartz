<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Data-science-programmings on</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/</link><description>Recent content in Data-science-programmings on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wongd-hub.github.io/obsidian-quartz/data-science-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>1 DK Containers and their Advantages</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/other/docker/1-DK-Containers-and-their-Advantages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/other/docker/1-DK-Containers-and-their-Advantages/</guid><description>#course_datacamp-docker #docker
Advantages of Containers Containers A container is a portable computing environment, it contains everything needed (including dependencies, code, and configuration) to run a workflow or an application.</description></item><item><title>1.1 Your first Shiny app - Introduction</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/mastering-shiny/1.1-Your-first-Shiny-app-Introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/mastering-shiny/1.1-Your-first-Shiny-app-Introduction/</guid><description/></item><item><title>2 DK The Docker Engine</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/other/docker/2-DK-The-Docker-Engine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/other/docker/2-DK-The-Docker-Engine/</guid><description>#course_datacamp-docker #docker
Docker is an open-source tool that allows us to create, run, and manage containers. Docker&amp;rsquo;s creation in 2013 caused containers (which already existed) to explode in popularity.</description></item><item><title>2.1 Names and Values - Introduction</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.1-Names-and-Values-Introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.1-Names-and-Values-Introduction/</guid><description>#textbook_advanced-r #r
It is important to understand the distinction between an object and its name in R. This will help you:</description></item><item><title>2.2 Binding Basics</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.2-Binding-Basics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.2-Binding-Basics/</guid><description>#textbook_advanced-r #r
1 x &amp;lt;- c(1, 2, 3) It&amp;rsquo;s easy to read this as &amp;lsquo;create an object named &amp;ldquo;x&amp;rdquo;, containing the values 1, 2, 3&amp;rsquo;, but this is an oversimplification and a misrepresentation of what occurs in the back end.</description></item><item><title>2.3 Copy-on-modify</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.3-Copy-on-modify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.3-Copy-on-modify/</guid><description>#textbook_advanced-r #r
The following code creates a vector and binds x and y names to that object. It then modifies y.</description></item><item><title>2.4 Object Size</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.4-Object-Size/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.4-Object-Size/</guid><description>#textbook_advanced-r #r
You can find how much memory an object takes with lobstr::obj_size().
Elements of lists are just references to values to the following list won&amp;rsquo;t be as large as you might think.</description></item><item><title>2.5 Modify-in-Place</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.5-Modify-in-Place/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.5-Modify-in-Place/</guid><description>#textbook_advanced-r #r
There are some exceptions to when R makes a copy of an object if it gets modified:
Objects with a single name binding get a special performance optimisation Environments (a special type of object) are always modified in place 2.</description></item><item><title>2.6 Unbinding and the Garbage Collector</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.6-Unbinding-and-the-Garbage-Collector/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/2-Names-and-Values/2.6-Unbinding-and-the-Garbage-Collector/</guid><description>#textbook_advanced-r #r
When we do this:
1 2 3 x &amp;lt;- 1:3 x &amp;lt;- 2:4 rm(x) We&amp;rsquo;re binding 1:3 to x, then binding 2:4 to x instead, then removing that binding.</description></item><item><title>3 DK Containers vs. Virtual Machines</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/other/docker/3-DK-Containers-vs.-Virtual-Machines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/other/docker/3-DK-Containers-vs.-Virtual-Machines/</guid><description>#course_datacamp-docker #docker
Containers and Virtual Machines Containers and VMs both enable you to run processes side-by-side on the same physical machine without interfering with each other.</description></item><item><title>3.1 Vectors - Introduction</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.1-Vectors-Introduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.1-Vectors-Introduction/</guid><description>#textbook_advanced-r #r
Vectors are the most important family of data types in base R. This chapter will go through how all the types fit together as a whole.</description></item><item><title>3.2 Atomic Vectors</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.2-Atomic-Vectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.2-Atomic-Vectors/</guid><description>#textbook_advanced-r #r
The four primary types of atomic vectors are:
Logical Integer Double Character There are two rarer types, complex (as in complex numbers) and raw (binary data).</description></item><item><title>3.3 Attributes</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.3-Attributes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.3-Attributes/</guid><description>Matrices, arrays, factors, and date-times are all extensions of atomic vectors. We build these constructs by adding attributes on top of atomic vectors.</description></item><item><title>3.4 S3 Atomic Vectors</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.4-S3-Atomic-Vectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.4-S3-Atomic-Vectors/</guid><description>Another important attribute that vectors can have (in addition to names and dim) is class. If a vector has a class attribute then it becomes an S3 object; which in turn means that it will behave differently when passed through a generic function.</description></item><item><title>3.5 Lists</title><link>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.5-Lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/data-science-programming/r/advanced-r/3-Vectors/3.5-Lists/</guid><description/></item></channel></rss>