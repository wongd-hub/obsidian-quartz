<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computer-sciences on</title><link>https://wongd-hub.github.io/obsidian-quartz/computer-science/</link><description>Recent content in Computer-sciences on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://wongd-hub.github.io/obsidian-quartz/computer-science/index.xml" rel="self" type="application/rss+xml"/><item><title>ASCII</title><link>https://wongd-hub.github.io/obsidian-quartz/computer-science/ASCII/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/computer-science/ASCII/</guid><description>#course_cs50
How do we represent language in a way that can be understood by computers? We can assign numbers to each letter.</description></item><item><title>Binary</title><link>https://wongd-hub.github.io/obsidian-quartz/computer-science/Binary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/computer-science/Binary/</guid><description>#course_cs50
base-2 Our everyday number system is a decimal-based (i.e. base-10) one. Take the number 123 for example, we can think of this as 1 in the 100s slot, 2 in the 10s slot, 3 in the 1s slot; adding them we get 123 Generalising this, each of those slots is 10 to the power of something: $100 = 10^2, 10 = 10^1, 1 = 10^0$ If we wanted to switch to a binary system, i.</description></item><item><title>Pseudocode</title><link>https://wongd-hub.github.io/obsidian-quartz/computer-science/Pseudocode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/computer-science/Pseudocode/</guid><description>#course_cs50
Used to describe a code algorithm succinctly and accurately. We can break up the example pseudocode below into functions (verbs), control flow (if-else), boolean expressions, and loops.</description></item><item><title>RGB</title><link>https://wongd-hub.github.io/obsidian-quartz/computer-science/RGB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/computer-science/RGB/</guid><description>#course_cs50
This is one of the ways we can represent colours as a sequence of numbers. We can generate every colour of the rainbow by varying the amount of Red, Green, and Blue being displayed.</description></item><item><title>Scratch</title><link>https://wongd-hub.github.io/obsidian-quartz/computer-science/Scratch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/computer-science/Scratch/</guid><description>#course_cs50</description></item><item><title>Unicode</title><link>https://wongd-hub.github.io/obsidian-quartz/computer-science/Unicode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/computer-science/Unicode/</guid><description>#course_cs50
Unicode is a superset of ASCII as we realised we need more bits to represent languages, emojis, etc. Unicode&amp;rsquo;s mission is to represent and preserve all human language both past, present, and future.</description></item><item><title>What is Computer Science?</title><link>https://wongd-hub.github.io/obsidian-quartz/computer-science/What-is-Computer-Science/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wongd-hub.github.io/obsidian-quartz/computer-science/What-is-Computer-Science/</guid><description>#course_cs50
Study of information Solving problems with certain ideas and techniques Problem solving is a goal we&amp;rsquo;ll approach with computational thinking Problem solving flowchart LR Input Empty["</description></item></channel></rss>